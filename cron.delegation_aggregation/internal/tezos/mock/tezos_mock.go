// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/guillaumedebavelaere/tezos-delegation/cron.delegation_aggregation/internal/tezos (interfaces: API)
//
// Generated by this command:
//
//	mockgen -destination=./internal/tezos/mock/tezos_mock.go -package=mock_tezos github.com/guillaumedebavelaere/tezos-delegation/cron.delegation_aggregation/internal/tezos API
//
// Package mock_tezos is a generated GoMock package.
package mock_tezos

import (
	context "context"
	reflect "reflect"
	time "time"

	tezos "github.com/guillaumedebavelaere/tezos-delegation/cron.delegation_aggregation/internal/tezos"
	req "github.com/imroc/req/v3"
	gomock "go.uber.org/mock/gomock"
)

// MockAPI is a mock of API interface.
type MockAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAPIMockRecorder
}

// MockAPIMockRecorder is the mock recorder for MockAPI.
type MockAPIMockRecorder struct {
	mock *MockAPI
}

// NewMockAPI creates a new mock instance.
func NewMockAPI(ctrl *gomock.Controller) *MockAPI {
	mock := &MockAPI{ctrl: ctrl}
	mock.recorder = &MockAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPI) EXPECT() *MockAPIMockRecorder {
	return m.recorder
}

// C mocks base method.
func (m *MockAPI) C() *req.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "C")
	ret0, _ := ret[0].(*req.Client)
	return ret0
}

// C indicates an expected call of C.
func (mr *MockAPIMockRecorder) C() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "C", reflect.TypeOf((*MockAPI)(nil).C))
}

// Init mocks base method.
func (m *MockAPI) Init() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Init")
}

// Init indicates an expected call of Init.
func (mr *MockAPIMockRecorder) Init() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockAPI)(nil).Init))
}

// ListDelegations mocks base method.
func (m *MockAPI) ListDelegations(arg0 context.Context, arg1 *time.Time) ([]*tezos.Delegation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDelegations", arg0, arg1)
	ret0, _ := ret[0].([]*tezos.Delegation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDelegations indicates an expected call of ListDelegations.
func (mr *MockAPIMockRecorder) ListDelegations(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDelegations", reflect.TypeOf((*MockAPI)(nil).ListDelegations), arg0, arg1)
}
